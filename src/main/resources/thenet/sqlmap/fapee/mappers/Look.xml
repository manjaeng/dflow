<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.thenet.fapee.look.service.impl.LookMapper">

	<select id="selectLookStyleList" resultType="egovMap">
		SELECT  idKey
			  , seq
			  , style
		  FROM fp_style
		 ORDER BY seq
	</select>
	<select id="selectLookAllList" resultType="egovMap">
		SELECT l.idKey
			, u.userId
			, s.style
			, l.content
			, l.createdate
			, l.status
		FROM fp_look as l
		LEFT JOIN fp_user as u ON l.userIdKey = u.idKey
		LEFT JOIN fp_style as s ON l.styleIdKey = s.idKey
		ORDER BY idKey
	</select>
	<insert id="insertLook" parameterType="LookVO" useGeneratedKeys="true" keyProperty="idKey">
		INSERT INTO fp_look (
			userIdKey
			,styleIdKey
			,modelKey
			,content
			,createDate
			,status
		) VALUES (
			#{userIdKey}
			,#{styleIdKey}
			,#{modelKey}
			,#{content}
			,now()
			,1
		)
	</insert>
	
	<insert id="insertLookImage" parameterType="LookVO">
		INSERT INTO fp_look_image (
			lookIdKey
			,imageUrl
		) VALUES
		<foreach collection="images" item="image" separator=","> 
		(
			"${idKey}"
			,"${image}"
		)
		</foreach>
	</insert>
	
	<insert id="insertLookTags" parameterType="LookVO">
		INSERT INTO fp_look_tag (
			lookIdKey
			,tagName
		) VALUES
		<foreach collection="tags" item="tag" separator=","> 
		(
			"${idKey}"
			,"${tag}"
		)
		</foreach>
	</insert>
	
	<select id="selectLookProfileList" resultType="egovMap">
		SELECT l.idKey
			  ,u.userId
			  ,l.idKey AS lookIdkey
			  ,l.content
			  ,s.style
			  ,up.nickName
			  ,up.imageUrl
			  ,uf.gender
			  ,uf.country
			  ,(SELECT COUNT(*)
		    	  FROM fp_look_comment
				  WHERE lookIdKey = l.idKey AND status = 1) AS commentCount
			  ,(SELECT COUNT(*)
		   		  FROM fp_look_cool
			 	 WHERE lookIdKey = l.idkey) AS coolCount
			  ,(SELECT GROUP_CONCAT(imageUrl ORDER BY idKey SEPARATOR ',,,')
				  FROM fp_look_image
				  WHERE lookIdKey = l.idKey
				  GROUP BY lookIdKey) AS image
			  ,(SELECT GROUP_CONCAT(tagName ORDER BY idKey SEPARATOR ',,,')
				  FROM fp_look_tag
				  WHERE lookIdKey = l.idKey
				  GROUP BY lookIdKey) AS tag
			  <if test='sessionIdKey != null'>
		      ,(
				 SELECT count(*)
		  		   FROM fp_look_cool
		 		  WHERE userIdKey = #{sessionIdKey} AND lookIdKey = l.idkey
			   ) isCool
		      </if>
		  FROM fp_user u
			INNER JOIN fp_look l ON u.idKey = l.userIdKey
	  		LEFT OUTER  JOIN fp_user_filter uf ON u.idKey = uf.userIdKey
		    LEFT OUTER  JOIN fp_user_profile up ON u.idKey = up.userIdKey
		    LEFT JOIN fp_style s ON l.styleIdKey = s.idKey
		 WHERE 1=1
		 <if test="idKey != null">
		  AND u.idKey = #{idKey}
		 </if>
		<if test="userId != null">
			AND u.userId = #{userId}
		</if>
		  AND l.status = 1
		 <if test="lookId != null" >
		  AND l.idKey = #{lookId}
		 </if>
		<if test="style != null">
			AND s.style = #{style}
		</if>
		<if test="tag != null">
			AND l.idKey in (select distinct tag.lookIdKey from fp_look_tag tag where tag.tagName = #{tag})
		</if>
		<if test="matchKey !=null">
			AND l.modelKey IN  (
			select   DISTINCT  model.idKey from fp_model_match mat, fp_user_model model, fp_user_model smodel
			where mat.matchKey = #{matchKey}  and mat.gender = model.gender
			and smodel.idKey = #{modelKey}
			and model.age &lt; ( smodel.age + mat.age) and model.age > (smodel.age - mat.age)
			and model.height &lt; (smodel.height + mat.hight1) and model.height > (smodel.height - mat.hight1)
			and model.bust &lt; (smodel.bust + mat.bust1) and model.bust > (smodel.bust - mat.bust1)
			and model.hip &lt; (smodel.hip + mat.hip1) and model.hip > (smodel.hip - mat.hip1)
			and model.sleeve &lt; (smodel.sleeve + mat.sleeve1) and model.sleeve > (smodel.sleeve - mat.sleeve1)
			)
		</if>
		 ORDER BY l.createDate DESC
		 <if test="pageStart != null and pageSize != null">
		 	LIMIT #{pageStart}, #{pageSize}
		 </if>
	</select>
	
	<update id="updateLookInfo" parameterType="EgovMap">
        UPDATE fp_look
        <trim prefix="SET" suffixOverrides=",">
            <if test="status != null">status=#{status} ,</if>
        </trim>
        WHERE idKey = #{idKey}
    </update>
    
    <select id="selectLookCommentList" resultType="egovMap">
		SELECT lc.idKey
			  ,lc.lookIdKey
			  ,lc.userIdKey
			  ,lc.parentIdKey
			  ,lc.content
			  ,DATE_FORMAT(lc.createDate,'%Y.%m.%d %H:%i') AS createDate
			  ,u.userId
			  ,uf.nickName
			  ,uf.imageUrl
		  FROM fp_look_comment lc
		  JOIN fp_user_profile uf ON lc.userIdKey = uf.userIdKey 
		  JOIN fp_user u ON lc.userIdKey = u.idKey
		 WHERE lc.lookIdKey = #{lookIdKey} AND lc.status = 1 AND u.status = 1
		 ORDER BY parentIdKey, createDate
		 <if test="pageStart != null and pageSize != null">
		 	LIMIT #{pageStart}, #{pageSize}
		 </if>
	</select>
	
	<insert id="insertLookCommentInfo" parameterType="egovMap" useGeneratedKeys="true" keyProperty="idKey">
		INSERT INTO fp_look_comment (
			 lookIdKey
			,userIdKey
			,content
			,createDate
			,parentIdKey
			,status
		) VALUES (
			 #{lookIdKey}
			,#{userIdKey}
			,#{content}
			,now()
			,#{parentIdKey}
			,1
		)
	</insert>
	
	<update id="updateLookCommentInfo" parameterType="EgovMap">
        UPDATE fp_look_comment
        <trim prefix="SET" suffixOverrides=",">
            <if test="idKey!= null">parentIdKey=#{idKey} ,</if>
        </trim>
        WHERE idKey = #{idKey}
    </update>
	
	<select id="selectLookDetail" resultType="egovMap">
		SELECT 
			u.userId,
			l.content,
			l.createDate,
			s.style,
			GROUP_CONCAT(DISTINCT imageUrl ORDER BY i.idKey SEPARATOR  ',,,') AS image,
			GROUP_CONCAT(DISTINCT tagName ORDER BY t.idKey SEPARATOR  ',,,') AS tag
			FROM fp_look AS l 
			LEFT JOIN fp_look_image AS i ON l.idKey=i.lookIdKey
			LEFT JOIN fp_user AS u ON l.userIdKey=u.idKey
			LEFT JOIN fp_look_tag AS t ON l.idKey=t.lookIdKey
			LEFT JOIN fp_style AS s ON l.styleIdKey=s.idKey
		WHERE l.idKey= #{idKey}
	</select>
	
	<insert id="insertLookCoolInfo" parameterType="egovMap">
		INSERT into fp_look_cool(
			 lookIdKey
			,userIdKey
			,lastStatusDate
		) VALUES (
			 #{lookIdKey}
			,#{userIdKey}
			,now()
		)
	</insert>
	
	<delete id="deleteLookCoolInfo" parameterType="egovMap">
		DELETE FROM fp_look_cool
         WHERE lookIdKey = #{lookIdKey} AND userIdKey = #{userIdKey}
	</delete>
	
	<select id="selectLookCoolList" parameterType="egovMap" resultType="egovMap">
		SELECT lc.userIdKey
			  ,up.imageUrl
			  ,u.userId
		      <if test='sessionIdKey != null'>
		      ,(
				 SELECT count(*)
		  		   FROM fp_look_cool
		 		  WHERE userIdKey = #{sessionIdKey} 
			   ) isCool
		      </if>
		  FROM fp_look_cool lc
		  JOIN fp_user u ON lc.userIdKey = u.idKey
		  JOIN fp_user_profile up ON u.idKey = up.userIdKey
		 WHERE u.status = 1 AND lc.lookIdKey = #{lookIdKey}
		 ORDER BY lc.lastStatusDate desc
		 <if test="pageStart != null and pageSize != null">
		 	LIMIT #{pageStart}, #{pageSize}
		 </if>
	</select>
	
   <insert id="insertLookPorductMap" parameterType="egovMap">
		INSERT into fp_look_porduct_map(
				  lookIdKey   ,
				  producIdKey ,
				  xPoint      ,
				  yPoint      ,
				  productNum  ,
				  productName ,
				  produtPrice ,
				  ProductUrl  ,
				  useYn       ,
				  createDate  ,
		) VALUES (
				  #{lookIdKey}   ,
				  #{producIdKey} ,
				  #{xPoint}      ,
				  #{yPoint}      ,
				  #{productNum}  ,
				  #{productName} ,
				  #{produtPrice} ,
				  #{ProductUrl}  ,
				  'Y'            ,
			      now()
		)
	</insert>
	
	<delete id="deleteLookPorductMap" parameterType="egovMap">
		DELETE FROM fp_look_porduct_map
         WHERE lookIdKey = #{lookIdKey} AND producIdKey = #{producIdKey}
	</delete>
	
	<select id="selectLookPorductMap" parameterType="egovMap" resultType="egovMap">
		SELECT    idKey       ,
				  lookIdKey   ,
				  producIdKey ,
				  xPoint      ,
				  yPoint      ,
				  productNum  ,
				  productName ,
				  produtPrice ,
				  ProductUrl  ,
				  useYn       ,
				  createDate  ,
		  FROM fp_look_porduct_map lc
		  WHERE lc.producIdKey = #{producIdKey}
		 ORDER BY lc.productNum 
		 <if test="pageStart != null and pageSize != null">
		 	LIMIT #{pageStart}, #{pageSize}
		 </if>
	</select>
</mapper>